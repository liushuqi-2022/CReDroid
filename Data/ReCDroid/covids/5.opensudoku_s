<cz.romario.opensudoku.BuildConfig: V <init>()>
<cz.romario.opensudoku.R$array: V <init>()>
<cz.romario.opensudoku.R$attr: V <init>()>
<cz.romario.opensudoku.R$color: V <init>()>
<cz.romario.opensudoku.R$drawable: V <init>()>
<cz.romario.opensudoku.R$id: V <init>()>
<cz.romario.opensudoku.R$layout: V <init>()>
<cz.romario.opensudoku.R$raw: V <init>()>
<cz.romario.opensudoku.R$string: V <init>()>
<cz.romario.opensudoku.R$style: V <init>()>
<cz.romario.opensudoku.R$styleable: V <clinit>()>
<cz.romario.opensudoku.R$styleable: V <init>()>
<cz.romario.opensudoku.R$xml: V <init>()>
<cz.romario.opensudoku.R: V <init>()>
<cz.romario.opensudoku.db.DatabaseHelper: V <init>(Landroid/content/Context;)>
<cz.romario.opensudoku.db.DatabaseHelper: V createIndexes(Landroid/database/sqlite/SQLiteDatabase;)>
<cz.romario.opensudoku.db.DatabaseHelper: V insertFolder(Landroid/database/sqlite/SQLiteDatabase;JLjava/lang/String;)>
<cz.romario.opensudoku.db.DatabaseHelper: V insertSudoku(Landroid/database/sqlite/SQLiteDatabase;JJLjava/lang/String;Ljava/lang/String;)>
<cz.romario.opensudoku.db.DatabaseHelper: V onCreate(Landroid/database/sqlite/SQLiteDatabase;)>
<cz.romario.opensudoku.db.DatabaseHelper: V onUpgrade(Landroid/database/sqlite/SQLiteDatabase;II)>
<cz.romario.opensudoku.db.FolderColumns: V <init>()>
<cz.romario.opensudoku.db.SudokuColumns: V <init>()>
<cz.romario.opensudoku.db.SudokuDatabase: V <init>(Landroid/content/Context;)>
<cz.romario.opensudoku.db.SudokuDatabase: V beginTransaction()>
<cz.romario.opensudoku.db.SudokuDatabase: V close()>
<cz.romario.opensudoku.db.SudokuDatabase: V deleteFolder(J)>
<cz.romario.opensudoku.db.SudokuDatabase: V deleteSudoku(J)>
<cz.romario.opensudoku.db.SudokuDatabase: V endTransaction()>
<cz.romario.opensudoku.db.SudokuDatabase: Landroid/database/Cursor; exportFolder(J)>
<cz.romario.opensudoku.db.SudokuDatabase: Landroid/database/Cursor; exportSudoku(J)>
<cz.romario.opensudoku.db.SudokuDatabase: Lcz/romario/opensudoku/game/FolderInfo; findFolder(Ljava/lang/String;)>
<cz.romario.opensudoku.db.SudokuDatabase: Lcz/romario/opensudoku/game/FolderInfo; getFolderInfo(J)>
<cz.romario.opensudoku.db.SudokuDatabase: Lcz/romario/opensudoku/game/FolderInfo; getFolderInfoFull(J)>
<cz.romario.opensudoku.db.SudokuDatabase: Landroid/database/Cursor; getFolderList()>
<cz.romario.opensudoku.db.SudokuDatabase: Lcz/romario/opensudoku/game/FolderInfo; getInboxFolder()>
<cz.romario.opensudoku.db.SudokuDatabase: Lcz/romario/opensudoku/game/SudokuGame; getSudoku(J)>
<cz.romario.opensudoku.db.SudokuDatabase: Landroid/database/Cursor; getSudokuList(JLcz/romario/opensudoku/gui/SudokuListFilter;)>
<cz.romario.opensudoku.db.SudokuDatabase: J importSudoku(JLcz/romario/opensudoku/db/SudokuImportParams;)>
<cz.romario.opensudoku.db.SudokuDatabase: Lcz/romario/opensudoku/game/FolderInfo; insertFolder(Ljava/lang/String;Ljava/lang/Long;)>
<cz.romario.opensudoku.db.SudokuDatabase: J insertSudoku(JLcz/romario/opensudoku/game/SudokuGame;)>
<cz.romario.opensudoku.db.SudokuDatabase: V setTransactionSuccessful()>
<cz.romario.opensudoku.db.SudokuDatabase: V updateFolder(JLjava/lang/String;)>
<cz.romario.opensudoku.db.SudokuDatabase: V updateSudoku(Lcz/romario/opensudoku/game/SudokuGame;)>
<cz.romario.opensudoku.db.SudokuImportParams: V <init>()>
<cz.romario.opensudoku.db.SudokuImportParams: V clear()>
<cz.romario.opensudoku.db.SudokuInvalidFormatException: V <init>(Ljava/lang/String;)>
<cz.romario.opensudoku.db.SudokuInvalidFormatException: Ljava/lang/String; getData()>
<cz.romario.opensudoku.game.Cell: V <init>()>
<cz.romario.opensudoku.game.Cell: V <init>(I)>
<cz.romario.opensudoku.game.Cell: V <init>(ILcz/romario/opensudoku/game/CellNote;ZZ)>
<cz.romario.opensudoku.game.Cell: Lcz/romario/opensudoku/game/Cell; deserialize(Ljava/lang/String;)>
<cz.romario.opensudoku.game.Cell: Lcz/romario/opensudoku/game/Cell; deserialize(Ljava/util/StringTokenizer;)>
<cz.romario.opensudoku.game.Cell: V onChange()>
<cz.romario.opensudoku.game.Cell: Lcz/romario/opensudoku/game/CellGroup; getColumn()>
<cz.romario.opensudoku.game.Cell: I getColumnIndex()>
<cz.romario.opensudoku.game.Cell: Lcz/romario/opensudoku/game/CellNote; getNote()>
<cz.romario.opensudoku.game.Cell: Lcz/romario/opensudoku/game/CellGroup; getRow()>
<cz.romario.opensudoku.game.Cell: I getRowIndex()>
<cz.romario.opensudoku.game.Cell: Lcz/romario/opensudoku/game/CellGroup; getSector()>
<cz.romario.opensudoku.game.Cell: I getValue()>
<cz.romario.opensudoku.game.Cell: V initCollection(Lcz/romario/opensudoku/game/CellCollection;IILcz/romario/opensudoku/game/CellGroup;Lcz/romario/opensudoku/game/CellGroup;Lcz/romario/opensudoku/game/CellGroup;)>
<cz.romario.opensudoku.game.Cell: Z isEditable()>
<cz.romario.opensudoku.game.Cell: Z isValid()>
<cz.romario.opensudoku.game.Cell: Ljava/lang/String; serialize()>
<cz.romario.opensudoku.game.Cell: V serialize(Ljava/lang/StringBuilder;)>
<cz.romario.opensudoku.game.Cell: V setEditable(Ljava/lang/Boolean;)>
<cz.romario.opensudoku.game.Cell: V setNote(Lcz/romario/opensudoku/game/CellNote;)>
<cz.romario.opensudoku.game.Cell: V setValid(Ljava/lang/Boolean;)>
<cz.romario.opensudoku.game.Cell: V setValue(I)>
<cz.romario.opensudoku.game.CellCollection: V <clinit>()>
<cz.romario.opensudoku.game.CellCollection: V <init>([[Lcz/romario/opensudoku/game/Cell;)>
<cz.romario.opensudoku.game.CellCollection: Lcz/romario/opensudoku/game/CellCollection; createDebugGame()>
<cz.romario.opensudoku.game.CellCollection: Lcz/romario/opensudoku/game/CellCollection; createEmpty()>
<cz.romario.opensudoku.game.CellCollection: Lcz/romario/opensudoku/game/CellCollection; deserialize(Ljava/lang/String;)>
<cz.romario.opensudoku.game.CellCollection: Lcz/romario/opensudoku/game/CellCollection; deserialize(Ljava/util/StringTokenizer;)>
<cz.romario.opensudoku.game.CellCollection: Lcz/romario/opensudoku/game/CellCollection; fromString(Ljava/lang/String;)>
<cz.romario.opensudoku.game.CellCollection: V initCollection()>
<cz.romario.opensudoku.game.CellCollection: Z isValid(Ljava/lang/String;I)>
<cz.romario.opensudoku.game.CellCollection: V addOnChangeListener(Lcz/romario/opensudoku/game/CellCollection$OnChangeListener;)>
<cz.romario.opensudoku.game.CellCollection: Lcz/romario/opensudoku/game/Cell; getCell(II)>
<cz.romario.opensudoku.game.CellCollection: [[Lcz/romario/opensudoku/game/Cell; getCells()>
<cz.romario.opensudoku.game.CellCollection: Ljava/util/Map; getValuesUseCount()>
<cz.romario.opensudoku.game.CellCollection: Z isCompleted()>
<cz.romario.opensudoku.game.CellCollection: Z isEmpty()>
<cz.romario.opensudoku.game.CellCollection: V markAllCellsAsEditable()>
<cz.romario.opensudoku.game.CellCollection: V markAllCellsAsValid()>
<cz.romario.opensudoku.game.CellCollection: V markFilledCellsAsNotEditable()>
<cz.romario.opensudoku.game.CellCollection: V onChange()>
<cz.romario.opensudoku.game.CellCollection: V removeOnChangeListener(Lcz/romario/opensudoku/game/CellCollection$OnChangeListener;)>
<cz.romario.opensudoku.game.CellCollection: Ljava/lang/String; serialize()>
<cz.romario.opensudoku.game.CellCollection: V serialize(Ljava/lang/StringBuilder;)>
<cz.romario.opensudoku.game.CellCollection: Z validate()>
<cz.romario.opensudoku.game.CellGroup: V <init>()>
<cz.romario.opensudoku.game.CellGroup: V addCell(Lcz/romario/opensudoku/game/Cell;)>
<cz.romario.opensudoku.game.CellGroup: Z contains(I)>
<cz.romario.opensudoku.game.CellGroup: Z validate()>
<cz.romario.opensudoku.game.CellNote: V <clinit>()>
<cz.romario.opensudoku.game.CellNote: V <init>()>
<cz.romario.opensudoku.game.CellNote: V <init>(Ljava/util/Set;)>
<cz.romario.opensudoku.game.CellNote: Lcz/romario/opensudoku/game/CellNote; deserialize(Ljava/lang/String;)>
<cz.romario.opensudoku.game.CellNote: Lcz/romario/opensudoku/game/CellNote; fromIntArray([Ljava/lang/Integer;)>
<cz.romario.opensudoku.game.CellNote: Lcz/romario/opensudoku/game/CellNote; addNumber(I)>
<cz.romario.opensudoku.game.CellNote: Lcz/romario/opensudoku/game/CellNote; clear()>
<cz.romario.opensudoku.game.CellNote: Ljava/util/Set; getNotedNumbers()>
<cz.romario.opensudoku.game.CellNote: Z isEmpty()>
<cz.romario.opensudoku.game.CellNote: Lcz/romario/opensudoku/game/CellNote; removeNumber(I)>
<cz.romario.opensudoku.game.CellNote: Ljava/lang/String; serialize()>
<cz.romario.opensudoku.game.CellNote: V serialize(Ljava/lang/StringBuilder;)>
<cz.romario.opensudoku.game.CellNote: Lcz/romario/opensudoku/game/CellNote; toggleNumber(I)>
<cz.romario.opensudoku.game.FolderInfo: V <init>()>
<cz.romario.opensudoku.game.FolderInfo: V <init>(JLjava/lang/String;)>
<cz.romario.opensudoku.game.FolderInfo: Ljava/lang/String; getDetail(Landroid/content/Context;)>
<cz.romario.opensudoku.game.SudokuGame: V <init>()>
<cz.romario.opensudoku.game.SudokuGame: Lcz/romario/opensudoku/game/SudokuGame; createEmptyGame()>
<cz.romario.opensudoku.game.SudokuGame: V executeCommand(Lcz/romario/opensudoku/game/command/AbstractCommand;)>
<cz.romario.opensudoku.game.SudokuGame: V finish()>
<cz.romario.opensudoku.game.SudokuGame: V clearAllNotes()>
<cz.romario.opensudoku.game.SudokuGame: V fillInNotes()>
<cz.romario.opensudoku.game.SudokuGame: Lcz/romario/opensudoku/game/CellCollection; getCells()>
<cz.romario.opensudoku.game.SudokuGame: J getCreated()>
<cz.romario.opensudoku.game.SudokuGame: J getId()>
<cz.romario.opensudoku.game.SudokuGame: J getLastPlayed()>
<cz.romario.opensudoku.game.SudokuGame: Ljava/lang/String; getNote()>
<cz.romario.opensudoku.game.SudokuGame: I getState()>
<cz.romario.opensudoku.game.SudokuGame: J getTime()>
<cz.romario.opensudoku.game.SudokuGame: Z hasSomethingToUndo()>
<cz.romario.opensudoku.game.SudokuGame: Z isCompleted()>
<cz.romario.opensudoku.game.SudokuGame: V pause()>
<cz.romario.opensudoku.game.SudokuGame: V reset()>
<cz.romario.opensudoku.game.SudokuGame: V restoreState(Landroid/os/Bundle;)>
<cz.romario.opensudoku.game.SudokuGame: V resume()>
<cz.romario.opensudoku.game.SudokuGame: V saveState(Landroid/os/Bundle;)>
<cz.romario.opensudoku.game.SudokuGame: V setCellNote(Lcz/romario/opensudoku/game/Cell;Lcz/romario/opensudoku/game/CellNote;)>
<cz.romario.opensudoku.game.SudokuGame: V setCellValue(Lcz/romario/opensudoku/game/Cell;I)>
<cz.romario.opensudoku.game.SudokuGame: V setCells(Lcz/romario/opensudoku/game/CellCollection;)>
<cz.romario.opensudoku.game.SudokuGame: V setCreated(J)>
<cz.romario.opensudoku.game.SudokuGame: V setId(J)>
<cz.romario.opensudoku.game.SudokuGame: V setLastPlayed(J)>
<cz.romario.opensudoku.game.SudokuGame: V setNote(Ljava/lang/String;)>
<cz.romario.opensudoku.game.SudokuGame: V setOnPuzzleSolvedListener(Lcz/romario/opensudoku/game/SudokuGame$OnPuzzleSolvedListener;)>
<cz.romario.opensudoku.game.SudokuGame: V setState(I)>
<cz.romario.opensudoku.game.SudokuGame: V setTime(J)>
<cz.romario.opensudoku.game.SudokuGame: V start()>
<cz.romario.opensudoku.game.SudokuGame: V undo()>
<cz.romario.opensudoku.game.SudokuGame: V validate()>
<cz.romario.opensudoku.game.command.AbstractCommand: V <init>()>
<cz.romario.opensudoku.game.command.AbstractCommand: Lcz/romario/opensudoku/game/command/AbstractCommand; newInstance(Ljava/lang/String;)>
<cz.romario.opensudoku.game.command.AbstractCommand: Ljava/lang/String; getCommandClass()>
<cz.romario.opensudoku.game.command.ClearAllNotesCommand$NoteEntry: V <init>(IILcz/romario/opensudoku/game/CellNote;)>
<cz.romario.opensudoku.game.command.CommandStack: V <init>(Lcz/romario/opensudoku/game/CellCollection;)>
<cz.romario.opensudoku.game.command.CommandStack: Lcz/romario/opensudoku/game/command/AbstractCommand; pop()>
<cz.romario.opensudoku.game.command.CommandStack: V push(Lcz/romario/opensudoku/game/command/AbstractCommand;)>
<cz.romario.opensudoku.game.command.CommandStack: V validateCells()>
<cz.romario.opensudoku.game.command.CommandStack: Z empty()>
<cz.romario.opensudoku.game.command.CommandStack: V execute(Lcz/romario/opensudoku/game/command/AbstractCommand;)>
<cz.romario.opensudoku.game.command.CommandStack: Z hasSomethingToUndo()>
<cz.romario.opensudoku.game.command.CommandStack: V restoreState(Landroid/os/Bundle;)>
<cz.romario.opensudoku.game.command.CommandStack: V saveState(Landroid/os/Bundle;)>
<cz.romario.opensudoku.game.command.CommandStack: V undo()>
<cz.romario.opensudoku.game.command.FillInNotesCommand$NoteEntry: V <init>(IILcz/romario/opensudoku/game/CellNote;)>
<cz.romario.opensudoku.gui.Changelog: V <init>(Landroid/content/Context;)>
<cz.romario.opensudoku.gui.Changelog: Ljava/lang/String; getChangelogFromResources()>
<cz.romario.opensudoku.gui.Changelog: V showChangelogDialog()>
<cz.romario.opensudoku.gui.Changelog: V showOnFirstRun()>
<cz.romario.opensudoku.gui.FileImportActivity: V <init>()>
<cz.romario.opensudoku.gui.FileImportActivity: V onCreate(Landroid/os/Bundle;)>
<cz.romario.opensudoku.gui.FileListActivity$1: V <init>(Lcz/romario/opensudoku/gui/FileListActivity;)>
<cz.romario.opensudoku.gui.FileListActivity$1: Z accept(Ljava/io/File;)>
<cz.romario.opensudoku.gui.FileListActivity$2: V <init>(Lcz/romario/opensudoku/gui/FileListActivity;)>
<cz.romario.opensudoku.gui.FileListActivity$2: Z accept(Ljava/io/File;)>
<cz.romario.opensudoku.gui.FileListActivity$3: V <init>(Lcz/romario/opensudoku/gui/FileListActivity;)>
<cz.romario.opensudoku.gui.FileListActivity$3: V onClick(Landroid/content/DialogInterface;I)>
<cz.romario.opensudoku.gui.FileListActivity$FileListViewBinder: V <init>()>
<cz.romario.opensudoku.gui.FileListActivity$FileListViewBinder: V <init>(Lcz/romario/opensudoku/gui/FileListActivity$FileListViewBinder;)>
<cz.romario.opensudoku.gui.FileListActivity$FileListViewBinder: Z setViewValue(Landroid/view/View;Ljava/lang/Object;Ljava/lang/String;)>
<cz.romario.opensudoku.gui.FileListActivity: V <init>()>
<cz.romario.opensudoku.gui.FileListActivity: Ljava/io/File; access$0(Lcz/romario/opensudoku/gui/FileListActivity;)>
<cz.romario.opensudoku.gui.FileListActivity: Landroid/content/Context; access$1(Lcz/romario/opensudoku/gui/FileListActivity;)>
<cz.romario.opensudoku.gui.FileListActivity: V onCreate(Landroid/os/Bundle;)>
<cz.romario.opensudoku.gui.FileListActivity: Landroid/app/Dialog; onCreateDialog(I)>
<cz.romario.opensudoku.gui.FileListActivity: V onDestroy()>
<cz.romario.opensudoku.gui.FileListActivity: V onListItemClick(Landroid/widget/ListView;Landroid/view/View;IJ)>
<cz.romario.opensudoku.gui.FileListActivity: V onPrepareDialog(ILandroid/app/Dialog;)>
<cz.romario.opensudoku.gui.FileListActivity: V onRestoreInstanceState(Landroid/os/Bundle;)>
<cz.romario.opensudoku.gui.FileListActivity: V onSaveInstanceState(Landroid/os/Bundle;)>
<cz.romario.opensudoku.gui.FileListActivity: V onStart()>
<cz.romario.opensudoku.gui.FolderDetailLoader$1$1: V <init>(Lcz/romario/opensudoku/gui/FolderDetailLoader$1;Lcz/romario/opensudoku/gui/FolderDetailLoader$FolderDetailCallback;Lcz/romario/opensudoku/game/FolderInfo;)>
<cz.romario.opensudoku.gui.FolderDetailLoader$1$1: V run()>
<cz.romario.opensudoku.gui.FolderDetailLoader$1: V <init>(Lcz/romario/opensudoku/gui/FolderDetailLoader;JLcz/romario/opensudoku/gui/FolderDetailLoader$FolderDetailCallback;)>
<cz.romario.opensudoku.gui.FolderDetailLoader$1: V run()>
<cz.romario.opensudoku.gui.FolderDetailLoader: V <init>(Landroid/content/Context;)>
<cz.romario.opensudoku.gui.FolderDetailLoader: Lcz/romario/opensudoku/db/SudokuDatabase; access$0(Lcz/romario/opensudoku/gui/FolderDetailLoader;)>
<cz.romario.opensudoku.gui.FolderDetailLoader: Landroid/os/Handler; access$1(Lcz/romario/opensudoku/gui/FolderDetailLoader;)>
<cz.romario.opensudoku.gui.FolderDetailLoader: V destroy()>
<cz.romario.opensudoku.gui.FolderDetailLoader: V loadDetailAsync(JLcz/romario/opensudoku/gui/FolderDetailLoader$FolderDetailCallback;)>
<cz.romario.opensudoku.gui.FolderListActivity$1: V <init>(Lcz/romario/opensudoku/gui/FolderListActivity;)>
<cz.romario.opensudoku.gui.FolderListActivity$1: V onClick(Landroid/view/View;)>
<cz.romario.opensudoku.gui.FolderListActivity$2: V <init>(Lcz/romario/opensudoku/gui/FolderListActivity;)>
<cz.romario.opensudoku.gui.FolderListActivity$2: V onClick(Landroid/content/DialogInterface;I)>
<cz.romario.opensudoku.gui.FolderListActivity$3: V <init>(Lcz/romario/opensudoku/gui/FolderListActivity;)>
<cz.romario.opensudoku.gui.FolderListActivity$3: V onClick(Landroid/content/DialogInterface;I)>
<cz.romario.opensudoku.gui.FolderListActivity$4: V <init>(Lcz/romario/opensudoku/gui/FolderListActivity;)>
<cz.romario.opensudoku.gui.FolderListActivity$4: V onClick(Landroid/content/DialogInterface;I)>
<cz.romario.opensudoku.gui.FolderListActivity$FolderListViewBinder: V <init>(Landroid/content/Context;)>
<cz.romario.opensudoku.gui.FolderListActivity$FolderListViewBinder: Landroid/content/Context; access$0(Lcz/romario/opensudoku/gui/FolderListActivity$FolderListViewBinder;)>
<cz.romario.opensudoku.gui.FolderListActivity$FolderListViewBinder: V destroy()>
<cz.romario.opensudoku.gui.FolderListActivity$FolderListViewBinder: Z setViewValue(Landroid/view/View;Landroid/database/Cursor;I)>
<cz.romario.opensudoku.gui.FolderListActivity: V <init>()>
<cz.romario.opensudoku.gui.FolderListActivity: Lcz/romario/opensudoku/db/SudokuDatabase; access$0(Lcz/romario/opensudoku/gui/FolderListActivity;)>
<cz.romario.opensudoku.gui.FolderListActivity: Landroid/widget/TextView; access$1(Lcz/romario/opensudoku/gui/FolderListActivity;)>
<cz.romario.opensudoku.gui.FolderListActivity: V access$2(Lcz/romario/opensudoku/gui/FolderListActivity;)>
<cz.romario.opensudoku.gui.FolderListActivity: J access$3(Lcz/romario/opensudoku/gui/FolderListActivity;)>
<cz.romario.opensudoku.gui.FolderListActivity: Landroid/widget/TextView; access$4(Lcz/romario/opensudoku/gui/FolderListActivity;)>
<cz.romario.opensudoku.gui.FolderListActivity: J access$5(Lcz/romario/opensudoku/gui/FolderListActivity;)>
<cz.romario.opensudoku.gui.FolderListActivity: V updateList()>
<cz.romario.opensudoku.gui.FolderListActivity: Z onContextItemSelected(Landroid/view/MenuItem;)>
<cz.romario.opensudoku.gui.FolderListActivity: V onCreate(Landroid/os/Bundle;)>
<cz.romario.opensudoku.gui.FolderListActivity: V onCreateContextMenu(Landroid/view/ContextMenu;Landroid/view/View;Landroid/view/ContextMenu$ContextMenuInfo;)>
<cz.romario.opensudoku.gui.FolderListActivity: Landroid/app/Dialog; onCreateDialog(I)>
<cz.romario.opensudoku.gui.FolderListActivity: Z onCreateOptionsMenu(Landroid/view/Menu;)>
<cz.romario.opensudoku.gui.FolderListActivity: V onDestroy()>
<cz.romario.opensudoku.gui.FolderListActivity: V onListItemClick(Landroid/widget/ListView;Landroid/view/View;IJ)>
<cz.romario.opensudoku.gui.FolderListActivity: Z onOptionsItemSelected(Landroid/view/MenuItem;)>
<cz.romario.opensudoku.gui.FolderListActivity: V onPrepareDialog(ILandroid/app/Dialog;)>
<cz.romario.opensudoku.gui.FolderListActivity: V onRestoreInstanceState(Landroid/os/Bundle;)>
<cz.romario.opensudoku.gui.FolderListActivity: V onSaveInstanceState(Landroid/os/Bundle;)>
<cz.romario.opensudoku.gui.FolderListActivity: V onStart()>
<cz.romario.opensudoku.gui.GameSettingsActivity$1: V <init>(Lcz/romario/opensudoku/gui/GameSettingsActivity;)>
<cz.romario.opensudoku.gui.GameSettingsActivity$1: Z onPreferenceChange(Landroid/preference/Preference;Ljava/lang/Object;)>
<cz.romario.opensudoku.gui.GameSettingsActivity: V <init>()>
<cz.romario.opensudoku.gui.GameSettingsActivity: V onCreate(Landroid/os/Bundle;)>
<cz.romario.opensudoku.gui.GameTimeFormat: V <init>()>
<cz.romario.opensudoku.gui.GameTimeFormat: Ljava/lang/String; format(J)>
<cz.romario.opensudoku.gui.HintsQueue$1: V <init>(Lcz/romario/opensudoku/gui/HintsQueue;)>
<cz.romario.opensudoku.gui.HintsQueue$1: V onClick(Landroid/content/DialogInterface;I)>
<cz.romario.opensudoku.gui.HintsQueue$2: V <init>(Lcz/romario/opensudoku/gui/HintsQueue;)>
<cz.romario.opensudoku.gui.HintsQueue$2: V onSharedPreferenceChanged(Landroid/content/SharedPreferences;Ljava/lang/String;)>
<cz.romario.opensudoku.gui.HintsQueue$3: V <init>(Lcz/romario/opensudoku/gui/HintsQueue;)>
<cz.romario.opensudoku.gui.HintsQueue$3: V onDismiss(Landroid/content/DialogInterface;)>
<cz.romario.opensudoku.gui.HintsQueue$Message: V <init>()>
<cz.romario.opensudoku.gui.HintsQueue$Message: V <init>(Lcz/romario/opensudoku/gui/HintsQueue$Message;)>
<cz.romario.opensudoku.gui.HintsQueue: V <init>(Landroid/content/Context;)>
<cz.romario.opensudoku.gui.HintsQueue: V access$0(Lcz/romario/opensudoku/gui/HintsQueue;Z)>
<cz.romario.opensudoku.gui.HintsQueue: V access$1(Lcz/romario/opensudoku/gui/HintsQueue;)>
<cz.romario.opensudoku.gui.HintsQueue: V addHint(Lcz/romario/opensudoku/gui/HintsQueue$Message;)>
<cz.romario.opensudoku.gui.HintsQueue: V processQueue()>
<cz.romario.opensudoku.gui.HintsQueue: V showHintDialog(Lcz/romario/opensudoku/gui/HintsQueue$Message;)>
<cz.romario.opensudoku.gui.HintsQueue: Z legacyHintsWereDisplayed()>
<cz.romario.opensudoku.gui.HintsQueue: V pause()>
<cz.romario.opensudoku.gui.HintsQueue: V resetOneTimeHints()>
<cz.romario.opensudoku.gui.HintsQueue: V showHint(II[Ljava/lang/Object;)>
<cz.romario.opensudoku.gui.HintsQueue: V showOneTimeHint(Ljava/lang/String;II[Ljava/lang/Object;)>
<cz.romario.opensudoku.gui.ImportSudokuActivity: V <init>()>
<cz.romario.opensudoku.gui.ImportSudokuActivity: V onCreate(Landroid/os/Bundle;)>
<cz.romario.opensudoku.gui.SeekBarPreference$1: V <init>(Lcz/romario/opensudoku/gui/SeekBarPreference;)>
<cz.romario.opensudoku.gui.SeekBarPreference$1: V onProgressChanged(Landroid/widget/SeekBar;IZ)>
<cz.romario.opensudoku.gui.SeekBarPreference$1: V onStartTrackingTouch(Landroid/widget/SeekBar;)>
<cz.romario.opensudoku.gui.SeekBarPreference$1: V onStopTrackingTouch(Landroid/widget/SeekBar;)>
<cz.romario.opensudoku.gui.SeekBarPreference$SavedState$1: V <init>()>
<cz.romario.opensudoku.gui.SeekBarPreference$SavedState$1: Lcz/romario/opensudoku/gui/SeekBarPreference$SavedState; createFromParcel(Landroid/os/Parcel;)>
<cz.romario.opensudoku.gui.SeekBarPreference$SavedState$1: Ljava/lang/Object; createFromParcel(Landroid/os/Parcel;)>
<cz.romario.opensudoku.gui.SeekBarPreference$SavedState$1: [Lcz/romario/opensudoku/gui/SeekBarPreference$SavedState; newArray(I)>
<cz.romario.opensudoku.gui.SeekBarPreference$SavedState$1: [Ljava/lang/Object; newArray(I)>
<cz.romario.opensudoku.gui.SeekBarPreference$SavedState: V <clinit>()>
<cz.romario.opensudoku.gui.SeekBarPreference$SavedState: V <init>(Landroid/os/Parcel;)>
<cz.romario.opensudoku.gui.SeekBarPreference$SavedState: V <init>(Landroid/os/Parcelable;)>
<cz.romario.opensudoku.gui.SeekBarPreference$SavedState: V writeToParcel(Landroid/os/Parcel;I)>
<cz.romario.opensudoku.gui.SeekBarPreference: V <init>(Landroid/content/Context;)>
<cz.romario.opensudoku.gui.SeekBarPreference: V <init>(Landroid/content/Context;Landroid/util/AttributeSet;)>
<cz.romario.opensudoku.gui.SeekBarPreference: V access$0(Lcz/romario/opensudoku/gui/SeekBarPreference;I)>
<cz.romario.opensudoku.gui.SeekBarPreference: V updateValueLabel(I)>
<cz.romario.opensudoku.gui.SeekBarPreference: I getMax()>
<cz.romario.opensudoku.gui.SeekBarPreference: I getMin()>
<cz.romario.opensudoku.gui.SeekBarPreference: I getValue()>
<cz.romario.opensudoku.gui.SeekBarPreference: Ljava/lang/String; getValueFormat()>
<cz.romario.opensudoku.gui.SeekBarPreference: V onAddSeekBarToDialogView(Landroid/view/View;Landroid/widget/SeekBar;)>
<cz.romario.opensudoku.gui.SeekBarPreference: V onBindDialogView(Landroid/view/View;)>
<cz.romario.opensudoku.gui.SeekBarPreference: V onDialogClosed(Z)>
<cz.romario.opensudoku.gui.SeekBarPreference: Ljava/lang/Object; onGetDefaultValue(Landroid/content/res/TypedArray;I)>
<cz.romario.opensudoku.gui.SeekBarPreference: V onRestoreInstanceState(Landroid/os/Parcelable;)>
<cz.romario.opensudoku.gui.SeekBarPreference: Landroid/os/Parcelable; onSaveInstanceState()>
<cz.romario.opensudoku.gui.SeekBarPreference: V onSetInitialValue(ZLjava/lang/Object;)>
<cz.romario.opensudoku.gui.SeekBarPreference: V setMax(I)>
<cz.romario.opensudoku.gui.SeekBarPreference: V setMin(I)>
<cz.romario.opensudoku.gui.SeekBarPreference: V setValue(I)>
<cz.romario.opensudoku.gui.SeekBarPreference: V setValueFormat(Ljava/lang/String;)>
<cz.romario.opensudoku.gui.SudokuBoardView: V <init>(Landroid/content/Context;)>
<cz.romario.opensudoku.gui.SudokuBoardView: V <init>(Landroid/content/Context;Landroid/util/AttributeSet;)>
<cz.romario.opensudoku.gui.SudokuBoardView: V computeSectorLineWidth(II)>
<cz.romario.opensudoku.gui.SudokuBoardView: Lcz/romario/opensudoku/game/Cell; getCellAtPoint(II)>
<cz.romario.opensudoku.gui.SudokuBoardView: Z moveCellSelection(II)>
<cz.romario.opensudoku.gui.SudokuBoardView: Z moveCellSelectionTo(II)>
<cz.romario.opensudoku.gui.SudokuBoardView: V setCellNote(Lcz/romario/opensudoku/game/Cell;Lcz/romario/opensudoku/game/CellNote;)>
<cz.romario.opensudoku.gui.SudokuBoardView: V setCellValue(Lcz/romario/opensudoku/game/Cell;I)>
<cz.romario.opensudoku.gui.SudokuBoardView: Z getAutoHideTouchedCellHint()>
<cz.romario.opensudoku.gui.SudokuBoardView: I getBackgroundColorReadOnly()>
<cz.romario.opensudoku.gui.SudokuBoardView: I getBackgroundColorSecondary()>
<cz.romario.opensudoku.gui.SudokuBoardView: I getBackgroundColorSelected()>
<cz.romario.opensudoku.gui.SudokuBoardView: I getBackgroundColorTouched()>
<cz.romario.opensudoku.gui.SudokuBoardView: Lcz/romario/opensudoku/game/CellCollection; getCells()>
<cz.romario.opensudoku.gui.SudokuBoardView: Z getHighlightTouchedCell()>
<cz.romario.opensudoku.gui.SudokuBoardView: Z getHighlightWrongVals()>
<cz.romario.opensudoku.gui.SudokuBoardView: I getLineColor()>
<cz.romario.opensudoku.gui.SudokuBoardView: I getSectorLineColor()>
<cz.romario.opensudoku.gui.SudokuBoardView: Lcz/romario/opensudoku/game/Cell; getSelectedCell()>
<cz.romario.opensudoku.gui.SudokuBoardView: I getTextColor()>
<cz.romario.opensudoku.gui.SudokuBoardView: I getTextColorNote()>
<cz.romario.opensudoku.gui.SudokuBoardView: I getTextColorReadOnly()>
<cz.romario.opensudoku.gui.SudokuBoardView: V hideTouchedCellHint()>
<cz.romario.opensudoku.gui.SudokuBoardView: Z isReadOnly()>
<cz.romario.opensudoku.gui.SudokuBoardView: V moveCellSelectionRight()>
<cz.romario.opensudoku.gui.SudokuBoardView: V onCellSelected(Lcz/romario/opensudoku/game/Cell;)>
<cz.romario.opensudoku.gui.SudokuBoardView: V onCellTapped(Lcz/romario/opensudoku/game/Cell;)>
<cz.romario.opensudoku.gui.SudokuBoardView: V onDraw(Landroid/graphics/Canvas;)>
<cz.romario.opensudoku.gui.SudokuBoardView: Z onKeyDown(ILandroid/view/KeyEvent;)>
<cz.romario.opensudoku.gui.SudokuBoardView: V onMeasure(II)>
<cz.romario.opensudoku.gui.SudokuBoardView: Z onTouchEvent(Landroid/view/MotionEvent;)>
<cz.romario.opensudoku.gui.SudokuBoardView: V setAutoHideTouchedCellHint(Z)>
<cz.romario.opensudoku.gui.SudokuBoardView: V setBackgroundColorReadOnly(I)>
<cz.romario.opensudoku.gui.SudokuBoardView: V setBackgroundColorSecondary(I)>
<cz.romario.opensudoku.gui.SudokuBoardView: V setBackgroundColorSelected(I)>
<cz.romario.opensudoku.gui.SudokuBoardView: V setBackgroundColorTouched(I)>
<cz.romario.opensudoku.gui.SudokuBoardView: V setCells(Lcz/romario/opensudoku/game/CellCollection;)>
<cz.romario.opensudoku.gui.SudokuBoardView: V setGame(Lcz/romario/opensudoku/game/SudokuGame;)>
<cz.romario.opensudoku.gui.SudokuBoardView: V setHighlightTouchedCell(Z)>
<cz.romario.opensudoku.gui.SudokuBoardView: V setHighlightWrongVals(Z)>
<cz.romario.opensudoku.gui.SudokuBoardView: V setLineColor(I)>
<cz.romario.opensudoku.gui.SudokuBoardView: V setOnCellSelectedListener(Lcz/romario/opensudoku/gui/SudokuBoardView$OnCellSelectedListener;)>
<cz.romario.opensudoku.gui.SudokuBoardView: V setOnCellTappedListener(Lcz/romario/opensudoku/gui/SudokuBoardView$OnCellTappedListener;)>
<cz.romario.opensudoku.gui.SudokuBoardView: V setReadOnly(Z)>
<cz.romario.opensudoku.gui.SudokuBoardView: V setSectorLineColor(I)>
<cz.romario.opensudoku.gui.SudokuBoardView: V setTextColor(I)>
<cz.romario.opensudoku.gui.SudokuBoardView: V setTextColorNote(I)>
<cz.romario.opensudoku.gui.SudokuBoardView: V setTextColorReadOnly(I)>
<cz.romario.opensudoku.gui.SudokuEditActivity$1: V <init>(Lcz/romario/opensudoku/gui/SudokuEditActivity;)>
<cz.romario.opensudoku.gui.SudokuEditActivity$1: V run()>
<cz.romario.opensudoku.gui.SudokuEditActivity: V <init>()>
<cz.romario.opensudoku.gui.SudokuEditActivity: Landroid/view/ViewGroup; access$0(Lcz/romario/opensudoku/gui/SudokuEditActivity;)>
<cz.romario.opensudoku.gui.SudokuEditActivity: V savePuzzle()>
<cz.romario.opensudoku.gui.SudokuEditActivity: V onCreate(Landroid/os/Bundle;)>
<cz.romario.opensudoku.gui.SudokuEditActivity: Z onCreateOptionsMenu(Landroid/view/Menu;)>
<cz.romario.opensudoku.gui.SudokuEditActivity: V onDestroy()>
<cz.romario.opensudoku.gui.SudokuEditActivity: Z onOptionsItemSelected(Landroid/view/MenuItem;)>
<cz.romario.opensudoku.gui.SudokuEditActivity: V onPause()>
<cz.romario.opensudoku.gui.SudokuEditActivity: V onSaveInstanceState(Landroid/os/Bundle;)>
<cz.romario.opensudoku.gui.SudokuEditActivity: V onWindowFocusChanged(Z)>
<cz.romario.opensudoku.gui.SudokuExportActivity$1: V <init>(Lcz/romario/opensudoku/gui/SudokuExportActivity;)>
<cz.romario.opensudoku.gui.SudokuExportActivity$1: V onClick(Landroid/view/View;)>
<cz.romario.opensudoku.gui.SudokuExportActivity$2: V <init>(Lcz/romario/opensudoku/gui/SudokuExportActivity;)>
<cz.romario.opensudoku.gui.SudokuExportActivity$2: V onClick(Landroid/content/DialogInterface;I)>
<cz.romario.opensudoku.gui.SudokuExportActivity: V <clinit>()>
<cz.romario.opensudoku.gui.SudokuExportActivity: V <init>()>
<cz.romario.opensudoku.gui.SudokuExportActivity: V access$0(Lcz/romario/opensudoku/gui/SudokuExportActivity;)>
<cz.romario.opensudoku.gui.SudokuExportActivity: V access$1(Lcz/romario/opensudoku/gui/SudokuExportActivity;)>
<cz.romario.opensudoku.gui.SudokuExportActivity: V exportToFile()>
<cz.romario.opensudoku.gui.SudokuExportActivity: V startExportToFileTask()>
<cz.romario.opensudoku.gui.SudokuExportActivity: V onCreate(Landroid/os/Bundle;)>
<cz.romario.opensudoku.gui.SudokuExportActivity: Landroid/app/Dialog; onCreateDialog(I)>
<cz.romario.opensudoku.gui.SudokuImportActivity: V <init>()>
<cz.romario.opensudoku.gui.SudokuImportActivity: V onCreate(Landroid/os/Bundle;)>
<cz.romario.opensudoku.gui.SudokuListActivity$1: V <init>(Lcz/romario/opensudoku/gui/SudokuListActivity;)>
<cz.romario.opensudoku.gui.SudokuListActivity$1: V onClick(Landroid/content/DialogInterface;I)>
<cz.romario.opensudoku.gui.SudokuListActivity$2: V <init>(Lcz/romario/opensudoku/gui/SudokuListActivity;)>
<cz.romario.opensudoku.gui.SudokuListActivity$2: V onClick(Landroid/content/DialogInterface;I)>
<cz.romario.opensudoku.gui.SudokuListActivity$3: V <init>(Lcz/romario/opensudoku/gui/SudokuListActivity;)>
<cz.romario.opensudoku.gui.SudokuListActivity$3: V onClick(Landroid/content/DialogInterface;I)>
<cz.romario.opensudoku.gui.SudokuListActivity$4: V <init>(Lcz/romario/opensudoku/gui/SudokuListActivity;)>
<cz.romario.opensudoku.gui.SudokuListActivity$4: V onClick(Landroid/content/DialogInterface;IZ)>
<cz.romario.opensudoku.gui.SudokuListActivity$5: V <init>(Lcz/romario/opensudoku/gui/SudokuListActivity;Landroid/content/SharedPreferences;)>
<cz.romario.opensudoku.gui.SudokuListActivity$5: V onClick(Landroid/content/DialogInterface;I)>
<cz.romario.opensudoku.gui.SudokuListActivity$6: V <init>(Lcz/romario/opensudoku/gui/SudokuListActivity;)>
<cz.romario.opensudoku.gui.SudokuListActivity$6: V onClick(Landroid/content/DialogInterface;I)>
<cz.romario.opensudoku.gui.SudokuListActivity$SudokuListViewBinder: V <init>(Landroid/content/Context;)>
<cz.romario.opensudoku.gui.SudokuListActivity$SudokuListViewBinder: Ljava/lang/String; getDateAndTimeForHumans(J)>
<cz.romario.opensudoku.gui.SudokuListActivity$SudokuListViewBinder: Z setViewValue(Landroid/view/View;Landroid/database/Cursor;I)>
<cz.romario.opensudoku.gui.SudokuListActivity: V <init>()>
<cz.romario.opensudoku.gui.SudokuListActivity: Lcz/romario/opensudoku/db/SudokuDatabase; access$0(Lcz/romario/opensudoku/gui/SudokuListActivity;)>
<cz.romario.opensudoku.gui.SudokuListActivity: J access$1(Lcz/romario/opensudoku/gui/SudokuListActivity;)>
<cz.romario.opensudoku.gui.SudokuListActivity: V access$2(Lcz/romario/opensudoku/gui/SudokuListActivity;)>
<cz.romario.opensudoku.gui.SudokuListActivity: J access$3(Lcz/romario/opensudoku/gui/SudokuListActivity;)>
<cz.romario.opensudoku.gui.SudokuListActivity: Landroid/widget/TextView; access$4(Lcz/romario/opensudoku/gui/SudokuListActivity;)>
<cz.romario.opensudoku.gui.SudokuListActivity: J access$5(Lcz/romario/opensudoku/gui/SudokuListActivity;)>
<cz.romario.opensudoku.gui.SudokuListActivity: Lcz/romario/opensudoku/gui/SudokuListFilter; access$6(Lcz/romario/opensudoku/gui/SudokuListActivity;)>
<cz.romario.opensudoku.gui.SudokuListActivity: V playSudoku(J)>
<cz.romario.opensudoku.gui.SudokuListActivity: V updateFilterStatus()>
<cz.romario.opensudoku.gui.SudokuListActivity: V updateList()>
<cz.romario.opensudoku.gui.SudokuListActivity: V updateTitle()>
<cz.romario.opensudoku.gui.SudokuListActivity: Z onContextItemSelected(Landroid/view/MenuItem;)>
<cz.romario.opensudoku.gui.SudokuListActivity: V onCreate(Landroid/os/Bundle;)>
<cz.romario.opensudoku.gui.SudokuListActivity: V onCreateContextMenu(Landroid/view/ContextMenu;Landroid/view/View;Landroid/view/ContextMenu$ContextMenuInfo;)>
<cz.romario.opensudoku.gui.SudokuListActivity: Landroid/app/Dialog; onCreateDialog(I)>
<cz.romario.opensudoku.gui.SudokuListActivity: Z onCreateOptionsMenu(Landroid/view/Menu;)>
<cz.romario.opensudoku.gui.SudokuListActivity: V onDestroy()>
<cz.romario.opensudoku.gui.SudokuListActivity: Z onKeyDown(ILandroid/view/KeyEvent;)>
<cz.romario.opensudoku.gui.SudokuListActivity: V onListItemClick(Landroid/widget/ListView;Landroid/view/View;IJ)>
<cz.romario.opensudoku.gui.SudokuListActivity: Z onOptionsItemSelected(Landroid/view/MenuItem;)>
<cz.romario.opensudoku.gui.SudokuListActivity: V onPrepareDialog(ILandroid/app/Dialog;)>
<cz.romario.opensudoku.gui.SudokuListActivity: V onRestoreInstanceState(Landroid/os/Bundle;)>
<cz.romario.opensudoku.gui.SudokuListActivity: V onResume()>
<cz.romario.opensudoku.gui.SudokuListActivity: V onSaveInstanceState(Landroid/os/Bundle;)>
<cz.romario.opensudoku.gui.SudokuListFilter: V <init>(Landroid/content/Context;)>
<cz.romario.opensudoku.gui.SudokuListFilter: Ljava/lang/String; toString()>
<cz.romario.opensudoku.gui.SudokuPlayActivity$2: V <init>(Lcz/romario/opensudoku/gui/SudokuPlayActivity;)>
<cz.romario.opensudoku.gui.SudokuPlayActivity$2: V run()>
<cz.romario.opensudoku.gui.SudokuPlayActivity$3: V <init>(Lcz/romario/opensudoku/gui/SudokuPlayActivity;)>
<cz.romario.opensudoku.gui.SudokuPlayActivity$3: V onClick(Landroid/content/DialogInterface;I)>
<cz.romario.opensudoku.gui.SudokuPlayActivity$4: V <init>(Lcz/romario/opensudoku/gui/SudokuPlayActivity;)>
<cz.romario.opensudoku.gui.SudokuPlayActivity$4: V onClick(Landroid/content/DialogInterface;I)>
<cz.romario.opensudoku.gui.SudokuPlayActivity: V <init>()>
<cz.romario.opensudoku.gui.SudokuPlayActivity: Lcz/romario/opensudoku/gui/SudokuBoardView; access$0(Lcz/romario/opensudoku/gui/SudokuPlayActivity;)>
<cz.romario.opensudoku.gui.SudokuPlayActivity: Landroid/view/ViewGroup; access$1(Lcz/romario/opensudoku/gui/SudokuPlayActivity;)>
<cz.romario.opensudoku.gui.SudokuPlayActivity: Lcz/romario/opensudoku/game/SudokuGame; access$2(Lcz/romario/opensudoku/gui/SudokuPlayActivity;)>
<cz.romario.opensudoku.gui.SudokuPlayActivity: Z access$3(Lcz/romario/opensudoku/gui/SudokuPlayActivity;)>
<cz.romario.opensudoku.gui.SudokuPlayActivity: Lcz/romario/opensudoku/gui/SudokuPlayActivity$GameTimer; access$4(Lcz/romario/opensudoku/gui/SudokuPlayActivity;)>
<cz.romario.opensudoku.gui.SudokuPlayActivity: V restartActivity()>
<cz.romario.opensudoku.gui.SudokuPlayActivity: V onActivityResult(IILandroid/content/Intent;)>
<cz.romario.opensudoku.gui.SudokuPlayActivity: V onCreate(Landroid/os/Bundle;)>
<cz.romario.opensudoku.gui.SudokuPlayActivity: Landroid/app/Dialog; onCreateDialog(I)>
<cz.romario.opensudoku.gui.SudokuPlayActivity: Z onCreateOptionsMenu(Landroid/view/Menu;)>
<cz.romario.opensudoku.gui.SudokuPlayActivity: V onDestroy()>
<cz.romario.opensudoku.gui.SudokuPlayActivity: Z onOptionsItemSelected(Landroid/view/MenuItem;)>
<cz.romario.opensudoku.gui.SudokuPlayActivity: V onPause()>
<cz.romario.opensudoku.gui.SudokuPlayActivity: Z onPrepareOptionsMenu(Landroid/view/Menu;)>
<cz.romario.opensudoku.gui.SudokuPlayActivity: V onResume()>
<cz.romario.opensudoku.gui.SudokuPlayActivity: V onSaveInstanceState(Landroid/os/Bundle;)>
<cz.romario.opensudoku.gui.SudokuPlayActivity: V onWindowFocusChanged(Z)>
<cz.romario.opensudoku.gui.SudokuPlayActivity: V updateTime()>
<cz.romario.opensudoku.gui.Timer$1: V <init>(Lcz/romario/opensudoku/gui/Timer;)>
<cz.romario.opensudoku.gui.Timer$1: V run()>
<cz.romario.opensudoku.gui.Timer: V <init>(J)>
<cz.romario.opensudoku.gui.Timer: Z access$0(Lcz/romario/opensudoku/gui/Timer;)>
<cz.romario.opensudoku.gui.Timer: J access$1(Lcz/romario/opensudoku/gui/Timer;)>
<cz.romario.opensudoku.gui.Timer: Ljava/lang/Runnable; access$10(Lcz/romario/opensudoku/gui/Timer;)>
<cz.romario.opensudoku.gui.Timer: V access$11(Lcz/romario/opensudoku/gui/Timer;Z)>
<cz.romario.opensudoku.gui.Timer: J access$2(Lcz/romario/opensudoku/gui/Timer;)>
<cz.romario.opensudoku.gui.Timer: V access$3(Lcz/romario/opensudoku/gui/Timer;J)>
<cz.romario.opensudoku.gui.Timer: V access$4(Lcz/romario/opensudoku/gui/Timer;J)>
<cz.romario.opensudoku.gui.Timer: I access$5(Lcz/romario/opensudoku/gui/Timer;)>
<cz.romario.opensudoku.gui.Timer: V access$6(Lcz/romario/opensudoku/gui/Timer;I)>
<cz.romario.opensudoku.gui.Timer: J access$7(Lcz/romario/opensudoku/gui/Timer;)>
<cz.romario.opensudoku.gui.Timer: J access$8(Lcz/romario/opensudoku/gui/Timer;)>
<cz.romario.opensudoku.gui.Timer: V access$9(Lcz/romario/opensudoku/gui/Timer;J)>
<cz.romario.opensudoku.gui.Timer: V done()>
<cz.romario.opensudoku.gui.Timer: J getTime()>
<cz.romario.opensudoku.gui.Timer: Z isRunning()>
<cz.romario.opensudoku.gui.Timer: V reset()>
<cz.romario.opensudoku.gui.Timer: Z restoreState(Landroid/os/Bundle;)>
<cz.romario.opensudoku.gui.Timer: Z restoreState(Landroid/os/Bundle;Z)>
<cz.romario.opensudoku.gui.Timer: V saveState(Landroid/os/Bundle;)>
<cz.romario.opensudoku.gui.Timer: V start()>
<cz.romario.opensudoku.gui.Timer: V stop()>
<cz.romario.opensudoku.gui.exporting.FileExportTask$1: V <init>(Lcz/romario/opensudoku/gui/exporting/FileExportTask;Lcz/romario/opensudoku/gui/exporting/FileExportTaskResult;)>
<cz.romario.opensudoku.gui.exporting.FileExportTask$1: V run()>
<cz.romario.opensudoku.gui.exporting.FileExportTask: V <init>(Landroid/content/Context;)>
<cz.romario.opensudoku.gui.exporting.FileExportTask: Lcz/romario/opensudoku/gui/exporting/FileExportTask$OnExportFinishedListener; access$1(Lcz/romario/opensudoku/gui/exporting/FileExportTask;)>
<cz.romario.opensudoku.gui.exporting.FileExportTask: V attribute(Lorg/xmlpull/v1/XmlSerializer;Ljava/lang/String;Landroid/database/Cursor;Ljava/lang/String;)>
<cz.romario.opensudoku.gui.exporting.FileExportTask: Lcz/romario/opensudoku/gui/exporting/FileExportTaskResult; saveToFile(Lcz/romario/opensudoku/gui/exporting/FileExportTaskParams;)>
<cz.romario.opensudoku.gui.exporting.FileExportTask: Ljava/lang/Object; doInBackground([Ljava/lang/Object;)>
<cz.romario.opensudoku.gui.exporting.FileExportTask: Ljava/lang/Void; doInBackground([Lcz/romario/opensudoku/gui/exporting/FileExportTaskParams;)>
<cz.romario.opensudoku.gui.exporting.FileExportTask: Lcz/romario/opensudoku/gui/exporting/FileExportTask$OnExportFinishedListener; getOnExportFinishedListener()>
<cz.romario.opensudoku.gui.exporting.FileExportTask: V setOnExportFinishedListener(Lcz/romario/opensudoku/gui/exporting/FileExportTask$OnExportFinishedListener;)>
<cz.romario.opensudoku.gui.exporting.FileExportTaskParams: V <init>()>
<cz.romario.opensudoku.gui.exporting.FileExportTaskResult: V <init>()>
<cz.romario.opensudoku.gui.importing.AbstractImportTask: V <init>()>
<cz.romario.opensudoku.gui.importing.AbstractImportTask: Ljava/lang/Boolean; processImportInternal()>
<cz.romario.opensudoku.gui.importing.AbstractImportTask: V appendToFolder(Ljava/lang/String;)>
<cz.romario.opensudoku.gui.importing.AbstractImportTask: Ljava/lang/Boolean; doInBackground([Ljava/lang/Void;)>
<cz.romario.opensudoku.gui.importing.AbstractImportTask: Ljava/lang/Object; doInBackground([Ljava/lang/Object;)>
<cz.romario.opensudoku.gui.importing.AbstractImportTask: V importFolder(Ljava/lang/String;)>
<cz.romario.opensudoku.gui.importing.AbstractImportTask: V importFolder(Ljava/lang/String;J)>
<cz.romario.opensudoku.gui.importing.AbstractImportTask: V importGame(Lcz/romario/opensudoku/db/SudokuImportParams;)>
<cz.romario.opensudoku.gui.importing.AbstractImportTask: V importGame(Ljava/lang/String;)>
<cz.romario.opensudoku.gui.importing.AbstractImportTask: V initialize(Landroid/content/Context;Landroid/widget/ProgressBar;)>
<cz.romario.opensudoku.gui.importing.AbstractImportTask: V onPostExecute(Ljava/lang/Boolean;)>
<cz.romario.opensudoku.gui.importing.AbstractImportTask: V onPostExecute(Ljava/lang/Object;)>
<cz.romario.opensudoku.gui.importing.AbstractImportTask: V onProgressUpdate([Ljava/lang/Integer;)>
<cz.romario.opensudoku.gui.importing.AbstractImportTask: V onProgressUpdate([Ljava/lang/Object;)>
<cz.romario.opensudoku.gui.importing.AbstractImportTask: V setError(Ljava/lang/String;)>
<cz.romario.opensudoku.gui.importing.AbstractImportTask: V setOnImportFinishedListener(Lcz/romario/opensudoku/gui/importing/AbstractImportTask$OnImportFinishedListener;)>
<cz.romario.opensudoku.gui.inputmethod.IMControlPanel$3: V <init>(Lcz/romario/opensudoku/gui/inputmethod/IMControlPanel;)>
<cz.romario.opensudoku.gui.inputmethod.IMControlPanel$3: V onClick(Landroid/view/View;)>
<cz.romario.opensudoku.gui.inputmethod.IMControlPanel: V <init>(Landroid/content/Context;)>
<cz.romario.opensudoku.gui.inputmethod.IMControlPanel: V <init>(Landroid/content/Context;Landroid/util/AttributeSet;)>
<cz.romario.opensudoku.gui.inputmethod.IMControlPanel: I access$0(Lcz/romario/opensudoku/gui/inputmethod/IMControlPanel;)>
<cz.romario.opensudoku.gui.inputmethod.IMControlPanel: Ljava/util/List; access$1(Lcz/romario/opensudoku/gui/inputmethod/IMControlPanel;)>
<cz.romario.opensudoku.gui.inputmethod.IMControlPanel: V addInputMethod(ILcz/romario/opensudoku/gui/inputmethod/InputMethod;)>
<cz.romario.opensudoku.gui.inputmethod.IMControlPanel: V createInputMethods()>
<cz.romario.opensudoku.gui.inputmethod.IMControlPanel: V ensureControlPanel(I)>
<cz.romario.opensudoku.gui.inputmethod.IMControlPanel: V ensureInputMethods()>
<cz.romario.opensudoku.gui.inputmethod.IMControlPanel: V activateFirstInputMethod()>
<cz.romario.opensudoku.gui.inputmethod.IMControlPanel: V activateInputMethod(I)>
<cz.romario.opensudoku.gui.inputmethod.IMControlPanel: V activateNextInputMethod()>
<cz.romario.opensudoku.gui.inputmethod.IMControlPanel: I getActiveMethodIndex()>
<cz.romario.opensudoku.gui.inputmethod.IMControlPanel: Lcz/romario/opensudoku/gui/inputmethod/InputMethod; getInputMethod(I)>
<cz.romario.opensudoku.gui.inputmethod.IMControlPanel: Ljava/util/List; getInputMethods()>
<cz.romario.opensudoku.gui.inputmethod.IMControlPanel: V initialize(Lcz/romario/opensudoku/gui/SudokuBoardView;Lcz/romario/opensudoku/game/SudokuGame;Lcz/romario/opensudoku/gui/HintsQueue;)>
<cz.romario.opensudoku.gui.inputmethod.IMControlPanel: V pause()>
<cz.romario.opensudoku.gui.inputmethod.IMControlPanel: V showHelpForActiveMethod()>
<cz.romario.opensudoku.gui.inputmethod.IMControlPanelStatePersister$StateBundle: V <init>(Landroid/content/SharedPreferences;Ljava/lang/String;Z)>
<cz.romario.opensudoku.gui.inputmethod.IMControlPanelStatePersister$StateBundle: V commit()>
<cz.romario.opensudoku.gui.inputmethod.IMControlPanelStatePersister$StateBundle: Z getBoolean(Ljava/lang/String;Z)>
<cz.romario.opensudoku.gui.inputmethod.IMControlPanelStatePersister$StateBundle: F getFloat(Ljava/lang/String;F)>
<cz.romario.opensudoku.gui.inputmethod.IMControlPanelStatePersister$StateBundle: I getInt(Ljava/lang/String;I)>
<cz.romario.opensudoku.gui.inputmethod.IMControlPanelStatePersister$StateBundle: Ljava/lang/String; getString(Ljava/lang/String;Ljava/lang/String;)>
<cz.romario.opensudoku.gui.inputmethod.IMControlPanelStatePersister$StateBundle: V putBoolean(Ljava/lang/String;Z)>
<cz.romario.opensudoku.gui.inputmethod.IMControlPanelStatePersister$StateBundle: V putFloat(Ljava/lang/String;F)>
<cz.romario.opensudoku.gui.inputmethod.IMControlPanelStatePersister$StateBundle: V putInt(Ljava/lang/String;I)>
<cz.romario.opensudoku.gui.inputmethod.IMControlPanelStatePersister$StateBundle: V putString(Ljava/lang/String;Ljava/lang/String;)>
<cz.romario.opensudoku.gui.inputmethod.IMControlPanelStatePersister: V <clinit>()>
<cz.romario.opensudoku.gui.inputmethod.IMControlPanelStatePersister: V <init>(Landroid/content/Context;)>
<cz.romario.opensudoku.gui.inputmethod.IMControlPanelStatePersister: V restoreState(Lcz/romario/opensudoku/gui/inputmethod/IMControlPanel;)>
<cz.romario.opensudoku.gui.inputmethod.IMControlPanelStatePersister: V saveState(Lcz/romario/opensudoku/gui/inputmethod/IMControlPanel;)>
<cz.romario.opensudoku.gui.inputmethod.IMNumpad$1: V <init>(Lcz/romario/opensudoku/gui/inputmethod/IMNumpad;)>
<cz.romario.opensudoku.gui.inputmethod.IMNumpad$1: V onClick(Landroid/view/View;)>
<cz.romario.opensudoku.gui.inputmethod.IMNumpad$3: V <init>(Lcz/romario/opensudoku/gui/inputmethod/IMNumpad;)>
<cz.romario.opensudoku.gui.inputmethod.IMNumpad$3: V onClick(Landroid/view/View;)>
<cz.romario.opensudoku.gui.inputmethod.IMPopup$3: V <init>(Lcz/romario/opensudoku/gui/inputmethod/IMPopup;)>
<cz.romario.opensudoku.gui.inputmethod.IMPopup$3: V onDismiss(Landroid/content/DialogInterface;)>
<cz.romario.opensudoku.gui.inputmethod.IMPopupDialog$1: V <init>(Lcz/romario/opensudoku/gui/inputmethod/IMPopupDialog;)>
<cz.romario.opensudoku.gui.inputmethod.IMPopupDialog$1: V onClick(Landroid/view/View;)>
<cz.romario.opensudoku.gui.inputmethod.IMPopupDialog$2: V <init>(Lcz/romario/opensudoku/gui/inputmethod/IMPopupDialog;)>
<cz.romario.opensudoku.gui.inputmethod.IMPopupDialog$2: V onCheckedChanged(Landroid/widget/CompoundButton;Z)>
<cz.romario.opensudoku.gui.inputmethod.IMPopupDialog$3: V <init>(Lcz/romario/opensudoku/gui/inputmethod/IMPopupDialog;)>
<cz.romario.opensudoku.gui.inputmethod.IMPopupDialog$3: V onClick(Landroid/view/View;)>
<cz.romario.opensudoku.gui.inputmethod.IMPopupDialog$4: V <init>(Lcz/romario/opensudoku/gui/inputmethod/IMPopupDialog;)>
<cz.romario.opensudoku.gui.inputmethod.IMPopupDialog$4: V onClick(Landroid/view/View;)>
<cz.romario.opensudoku.gui.inputmethod.IMPopupDialog$5: V <init>(Lcz/romario/opensudoku/gui/inputmethod/IMPopupDialog;Landroid/view/View;)>
<cz.romario.opensudoku.gui.inputmethod.IMPopupDialog$5: Landroid/view/View; createTabContent(Ljava/lang/String;)>
<cz.romario.opensudoku.gui.inputmethod.IMPopupDialog$6: V <init>(Lcz/romario/opensudoku/gui/inputmethod/IMPopupDialog;Landroid/view/View;)>
<cz.romario.opensudoku.gui.inputmethod.IMPopupDialog$6: Landroid/view/View; createTabContent(Ljava/lang/String;)>
<cz.romario.opensudoku.gui.inputmethod.IMPopupDialog: V <init>(Landroid/content/Context;)>
<cz.romario.opensudoku.gui.inputmethod.IMPopupDialog: Lcz/romario/opensudoku/gui/inputmethod/IMPopupDialog$OnNumberEditListener; access$0(Lcz/romario/opensudoku/gui/inputmethod/IMPopupDialog;)>
<cz.romario.opensudoku.gui.inputmethod.IMPopupDialog: Ljava/util/Set; access$1(Lcz/romario/opensudoku/gui/inputmethod/IMPopupDialog;)>
<cz.romario.opensudoku.gui.inputmethod.IMPopupDialog: Landroid/widget/TabHost; access$2(Lcz/romario/opensudoku/gui/inputmethod/IMPopupDialog;)>
<cz.romario.opensudoku.gui.inputmethod.IMPopupDialog: Ljava/util/Map; access$3(Lcz/romario/opensudoku/gui/inputmethod/IMPopupDialog;)>
<cz.romario.opensudoku.gui.inputmethod.IMPopupDialog: Lcz/romario/opensudoku/gui/inputmethod/IMPopupDialog$OnNoteEditListener; access$4(Lcz/romario/opensudoku/gui/inputmethod/IMPopupDialog;)>
<cz.romario.opensudoku.gui.inputmethod.IMPopupDialog: Landroid/view/View; createEditNoteView()>
<cz.romario.opensudoku.gui.inputmethod.IMPopupDialog: Landroid/view/View; createEditNumberView()>
<cz.romario.opensudoku.gui.inputmethod.IMPopupDialog: Landroid/widget/TabHost; createTabView()>
<cz.romario.opensudoku.gui.inputmethod.IMPopupDialog: V highlightNumber(I)>
<cz.romario.opensudoku.gui.inputmethod.IMPopupDialog: V resetButtons()>
<cz.romario.opensudoku.gui.inputmethod.IMPopupDialog: V setOnNoteEditListener(Lcz/romario/opensudoku/gui/inputmethod/IMPopupDialog$OnNoteEditListener;)>
<cz.romario.opensudoku.gui.inputmethod.IMPopupDialog: V setOnNumberEditListener(Lcz/romario/opensudoku/gui/inputmethod/IMPopupDialog$OnNumberEditListener;)>
<cz.romario.opensudoku.gui.inputmethod.IMPopupDialog: V setValueCount(II)>
<cz.romario.opensudoku.gui.inputmethod.IMPopupDialog: V updateNote(Ljava/util/Collection;)>
<cz.romario.opensudoku.gui.inputmethod.IMPopupDialog: V updateNumber(Ljava/lang/Integer;)>
<cz.romario.opensudoku.gui.inputmethod.IMSingleNumber$1: V <init>(Lcz/romario/opensudoku/gui/inputmethod/IMSingleNumber;)>
<cz.romario.opensudoku.gui.inputmethod.IMSingleNumber$1: V onClick(Landroid/view/View;)>
<cz.romario.opensudoku.gui.inputmethod.IMSingleNumber$3: V <init>(Lcz/romario/opensudoku/gui/inputmethod/IMSingleNumber;)>
<cz.romario.opensudoku.gui.inputmethod.IMSingleNumber$3: V onClick(Landroid/view/View;)>
<cz.romario.opensudoku.gui.inputmethod.IMSingleNumber$4: V <init>(Lcz/romario/opensudoku/gui/inputmethod/IMSingleNumber;)>
<cz.romario.opensudoku.gui.inputmethod.IMSingleNumber$4: V run()>
<cz.romario.opensudoku.gui.inputmethod.InputMethod: V <init>()>
<cz.romario.opensudoku.gui.inputmethod.InputMethod: V activate()>
<cz.romario.opensudoku.gui.inputmethod.InputMethod: V deactivate()>
<cz.romario.opensudoku.gui.inputmethod.InputMethod: Ljava/lang/String; getInputMethodName()>
<cz.romario.opensudoku.gui.inputmethod.InputMethod: Landroid/view/View; getInputMethodView()>
<cz.romario.opensudoku.gui.inputmethod.InputMethod: V initialize(Landroid/content/Context;Lcz/romario/opensudoku/gui/inputmethod/IMControlPanel;Lcz/romario/opensudoku/game/SudokuGame;Lcz/romario/opensudoku/gui/SudokuBoardView;Lcz/romario/opensudoku/gui/HintsQueue;)>
<cz.romario.opensudoku.gui.inputmethod.InputMethod: Z isEnabled()>
<cz.romario.opensudoku.gui.inputmethod.InputMethod: Z isInputMethodViewCreated()>
<cz.romario.opensudoku.gui.inputmethod.InputMethod: V onActivated()>
<cz.romario.opensudoku.gui.inputmethod.InputMethod: V onCellSelected(Lcz/romario/opensudoku/game/Cell;)>
<cz.romario.opensudoku.gui.inputmethod.InputMethod: V onCellTapped(Lcz/romario/opensudoku/game/Cell;)>
<cz.romario.opensudoku.gui.inputmethod.InputMethod: V onControlPanelCreated(Landroid/view/View;)>
<cz.romario.opensudoku.gui.inputmethod.InputMethod: V onDeactivated()>
<cz.romario.opensudoku.gui.inputmethod.InputMethod: V onPause()>
<cz.romario.opensudoku.gui.inputmethod.InputMethod: V onRestoreState(Lcz/romario/opensudoku/gui/inputmethod/IMControlPanelStatePersister$StateBundle;)>
<cz.romario.opensudoku.gui.inputmethod.InputMethod: V onSaveState(Lcz/romario/opensudoku/gui/inputmethod/IMControlPanelStatePersister$StateBundle;)>
<cz.romario.opensudoku.gui.inputmethod.InputMethod: V pause()>
<cz.romario.opensudoku.gui.inputmethod.InputMethod: V setEnabled(Z)>
<cz.romario.opensudoku.utils.AndroidUtils: V <init>()>
<cz.romario.opensudoku.utils.AndroidUtils: I getAppVersionCode(Landroid/content/Context;)>
<cz.romario.opensudoku.utils.AndroidUtils: Ljava/lang/String; getAppVersionName(Landroid/content/Context;)>
<cz.romario.opensudoku.utils.AndroidUtils: Z isIntentAvailable(Landroid/content/Context;Ljava/lang/String;)>
<cz.romario.opensudoku.utils.AndroidUtils: V setThemeFromPreferences(Landroid/content/Context;)>
<cz.romario.opensudoku.utils.Const: V <init>()>
<cz.romario.opensudoku.utils.StringUtils: V <init>()>
<cz.romario.opensudoku.utils.StringUtils: Ljava/lang/String; join(Ljava/util/Collection;Ljava/lang/String;)>
<cz.romario.opensudoku.game.command.AbstractCellCommand: V <init>()>
<cz.romario.opensudoku.game.command.AbstractCellCommand: Lcz/romario/opensudoku/game/CellCollection; getCells()>
<cz.romario.opensudoku.game.command.AbstractCellCommand: V setCells(Lcz/romario/opensudoku/game/CellCollection;)>
<cz.romario.opensudoku.gui.FolderListActivity$FolderListViewBinder$1: V <init>(Lcz/romario/opensudoku/gui/FolderListActivity$FolderListViewBinder;Landroid/widget/TextView;)>
<cz.romario.opensudoku.gui.FolderListActivity$FolderListViewBinder$1: V onLoaded(Lcz/romario/opensudoku/game/FolderInfo;)>
<cz.romario.opensudoku.gui.SudokuBoardView$1: V <init>(Lcz/romario/opensudoku/gui/SudokuBoardView;)>
<cz.romario.opensudoku.gui.SudokuBoardView$1: V onChange()>
<cz.romario.opensudoku.gui.SudokuExportActivity$3: V <init>(Lcz/romario/opensudoku/gui/SudokuExportActivity;)>
<cz.romario.opensudoku.gui.SudokuExportActivity$3: V onExportFinished(Lcz/romario/opensudoku/gui/exporting/FileExportTaskResult;)>
<cz.romario.opensudoku.gui.SudokuImportActivity$1: V <init>(Lcz/romario/opensudoku/gui/SudokuImportActivity;)>
<cz.romario.opensudoku.gui.SudokuImportActivity$1: V onImportFinished(ZJ)>
<cz.romario.opensudoku.gui.SudokuListActivity$7: V <init>(Lcz/romario/opensudoku/gui/SudokuListActivity;)>
<cz.romario.opensudoku.gui.SudokuListActivity$7: V onLoaded(Lcz/romario/opensudoku/game/FolderInfo;)>
<cz.romario.opensudoku.gui.SudokuPlayActivity$1: V <init>(Lcz/romario/opensudoku/gui/SudokuPlayActivity;)>
<cz.romario.opensudoku.gui.SudokuPlayActivity$1: V onPuzzleSolved()>
<cz.romario.opensudoku.gui.SudokuPlayActivity$GameTimer: V <init>(Lcz/romario/opensudoku/gui/SudokuPlayActivity;)>
<cz.romario.opensudoku.gui.SudokuPlayActivity$GameTimer: Z step(IJ)>
<cz.romario.opensudoku.gui.importing.ExtrasImportTask: V <init>(Ljava/lang/String;Ljava/lang/String;Z)>
<cz.romario.opensudoku.gui.importing.ExtrasImportTask: V processImport()>
<cz.romario.opensudoku.gui.importing.OpenSudokuImportTask: V <init>(Landroid/net/Uri;)>
<cz.romario.opensudoku.gui.importing.OpenSudokuImportTask: V importV1(Lorg/xmlpull/v1/XmlPullParser;)>
<cz.romario.opensudoku.gui.importing.OpenSudokuImportTask: V importV2(Lorg/xmlpull/v1/XmlPullParser;)>
<cz.romario.opensudoku.gui.importing.OpenSudokuImportTask: V importXml(Ljava/io/Reader;)>
<cz.romario.opensudoku.gui.importing.OpenSudokuImportTask: J parseLong(Ljava/lang/String;J)>
<cz.romario.opensudoku.gui.importing.OpenSudokuImportTask: V processImport()>
<cz.romario.opensudoku.gui.importing.SdmImportTask: V <init>(Landroid/net/Uri;)>
<cz.romario.opensudoku.gui.importing.SdmImportTask: V processImport()>
<cz.romario.opensudoku.gui.inputmethod.IMControlPanel$1: V <init>(Lcz/romario/opensudoku/gui/inputmethod/IMControlPanel;)>
<cz.romario.opensudoku.gui.inputmethod.IMControlPanel$1: V onCellTapped(Lcz/romario/opensudoku/game/Cell;)>
<cz.romario.opensudoku.gui.inputmethod.IMControlPanel$2: V <init>(Lcz/romario/opensudoku/gui/inputmethod/IMControlPanel;)>
<cz.romario.opensudoku.gui.inputmethod.IMControlPanel$2: V onCellSelected(Lcz/romario/opensudoku/game/Cell;)>
<cz.romario.opensudoku.gui.inputmethod.IMNumpad$2: V <init>(Lcz/romario/opensudoku/gui/inputmethod/IMNumpad;)>
<cz.romario.opensudoku.gui.inputmethod.IMNumpad$2: V onChange()>
<cz.romario.opensudoku.gui.inputmethod.IMNumpad: V <init>()>
<cz.romario.opensudoku.gui.inputmethod.IMNumpad: Lcz/romario/opensudoku/game/Cell; access$0(Lcz/romario/opensudoku/gui/inputmethod/IMNumpad;)>
<cz.romario.opensudoku.gui.inputmethod.IMNumpad: I access$1(Lcz/romario/opensudoku/gui/inputmethod/IMNumpad;)>
<cz.romario.opensudoku.gui.inputmethod.IMNumpad: V access$2(Lcz/romario/opensudoku/gui/inputmethod/IMNumpad;)>
<cz.romario.opensudoku.gui.inputmethod.IMNumpad: V access$3(Lcz/romario/opensudoku/gui/inputmethod/IMNumpad;I)>
<cz.romario.opensudoku.gui.inputmethod.IMNumpad: V update()>
<cz.romario.opensudoku.gui.inputmethod.IMNumpad: Landroid/view/View; createControlPanelView()>
<cz.romario.opensudoku.gui.inputmethod.IMNumpad: Ljava/lang/String; getAbbrName()>
<cz.romario.opensudoku.gui.inputmethod.IMNumpad: I getHelpResID()>
<cz.romario.opensudoku.gui.inputmethod.IMNumpad: Z getHighlightCompletedValues()>
<cz.romario.opensudoku.gui.inputmethod.IMNumpad: I getNameResID()>
<cz.romario.opensudoku.gui.inputmethod.IMNumpad: Z getShowNumberTotals()>
<cz.romario.opensudoku.gui.inputmethod.IMNumpad: V initialize(Landroid/content/Context;Lcz/romario/opensudoku/gui/inputmethod/IMControlPanel;Lcz/romario/opensudoku/game/SudokuGame;Lcz/romario/opensudoku/gui/SudokuBoardView;Lcz/romario/opensudoku/gui/HintsQueue;)>
<cz.romario.opensudoku.gui.inputmethod.IMNumpad: Z isMoveCellSelectionOnPress()>
<cz.romario.opensudoku.gui.inputmethod.IMNumpad: V onActivated()>
<cz.romario.opensudoku.gui.inputmethod.IMNumpad: V onCellSelected(Lcz/romario/opensudoku/game/Cell;)>
<cz.romario.opensudoku.gui.inputmethod.IMNumpad: V onRestoreState(Lcz/romario/opensudoku/gui/inputmethod/IMControlPanelStatePersister$StateBundle;)>
<cz.romario.opensudoku.gui.inputmethod.IMNumpad: V onSaveState(Lcz/romario/opensudoku/gui/inputmethod/IMControlPanelStatePersister$StateBundle;)>
<cz.romario.opensudoku.gui.inputmethod.IMNumpad: V setHighlightCompletedValues(Z)>
<cz.romario.opensudoku.gui.inputmethod.IMNumpad: V setMoveCellSelectionOnPress(Z)>
<cz.romario.opensudoku.gui.inputmethod.IMNumpad: V setShowNumberTotals(Z)>
<cz.romario.opensudoku.gui.inputmethod.IMPopup$1: V <init>(Lcz/romario/opensudoku/gui/inputmethod/IMPopup;)>
<cz.romario.opensudoku.gui.inputmethod.IMPopup$1: Z onNumberEdit(I)>
<cz.romario.opensudoku.gui.inputmethod.IMPopup$2: V <init>(Lcz/romario/opensudoku/gui/inputmethod/IMPopup;)>
<cz.romario.opensudoku.gui.inputmethod.IMPopup$2: Z onNoteEdit([Ljava/lang/Integer;)>
<cz.romario.opensudoku.gui.inputmethod.IMPopup: V <init>()>
<cz.romario.opensudoku.gui.inputmethod.IMPopup: Lcz/romario/opensudoku/game/Cell; access$0(Lcz/romario/opensudoku/gui/inputmethod/IMPopup;)>
<cz.romario.opensudoku.gui.inputmethod.IMPopup: V ensureEditCellDialog()>
<cz.romario.opensudoku.gui.inputmethod.IMPopup: Landroid/view/View; createControlPanelView()>
<cz.romario.opensudoku.gui.inputmethod.IMPopup: Ljava/lang/String; getAbbrName()>
<cz.romario.opensudoku.gui.inputmethod.IMPopup: I getHelpResID()>
<cz.romario.opensudoku.gui.inputmethod.IMPopup: Z getHighlightCompletedValues()>
<cz.romario.opensudoku.gui.inputmethod.IMPopup: I getNameResID()>
<cz.romario.opensudoku.gui.inputmethod.IMPopup: Z getShowNumberTotals()>
<cz.romario.opensudoku.gui.inputmethod.IMPopup: V onActivated()>
<cz.romario.opensudoku.gui.inputmethod.IMPopup: V onCellTapped(Lcz/romario/opensudoku/game/Cell;)>
<cz.romario.opensudoku.gui.inputmethod.IMPopup: V onDeactivated()>
<cz.romario.opensudoku.gui.inputmethod.IMPopup: V onPause()>
<cz.romario.opensudoku.gui.inputmethod.IMPopup: V setHighlightCompletedValues(Z)>
<cz.romario.opensudoku.gui.inputmethod.IMPopup: V setShowNumberTotals(Z)>
<cz.romario.opensudoku.gui.inputmethod.IMSingleNumber$2: V <init>(Lcz/romario/opensudoku/gui/inputmethod/IMSingleNumber;)>
<cz.romario.opensudoku.gui.inputmethod.IMSingleNumber$2: V onChange()>
<cz.romario.opensudoku.gui.inputmethod.IMSingleNumber: V <init>()>
<cz.romario.opensudoku.gui.inputmethod.IMSingleNumber: V access$0(Lcz/romario/opensudoku/gui/inputmethod/IMSingleNumber;I)>
<cz.romario.opensudoku.gui.inputmethod.IMSingleNumber: V access$1(Lcz/romario/opensudoku/gui/inputmethod/IMSingleNumber;)>
<cz.romario.opensudoku.gui.inputmethod.IMSingleNumber: I access$2(Lcz/romario/opensudoku/gui/inputmethod/IMSingleNumber;)>
<cz.romario.opensudoku.gui.inputmethod.IMSingleNumber: V access$3(Lcz/romario/opensudoku/gui/inputmethod/IMSingleNumber;I)>
<cz.romario.opensudoku.gui.inputmethod.IMSingleNumber: Ljava/util/Map; access$4(Lcz/romario/opensudoku/gui/inputmethod/IMSingleNumber;)>
<cz.romario.opensudoku.gui.inputmethod.IMSingleNumber: I access$5(Lcz/romario/opensudoku/gui/inputmethod/IMSingleNumber;)>
<cz.romario.opensudoku.gui.inputmethod.IMSingleNumber: Z access$6(Lcz/romario/opensudoku/gui/inputmethod/IMSingleNumber;)>
<cz.romario.opensudoku.gui.inputmethod.IMSingleNumber: Z access$7(Lcz/romario/opensudoku/gui/inputmethod/IMSingleNumber;)>
<cz.romario.opensudoku.gui.inputmethod.IMSingleNumber: V update()>
<cz.romario.opensudoku.gui.inputmethod.IMSingleNumber: Landroid/view/View; createControlPanelView()>
<cz.romario.opensudoku.gui.inputmethod.IMSingleNumber: Ljava/lang/String; getAbbrName()>
<cz.romario.opensudoku.gui.inputmethod.IMSingleNumber: I getHelpResID()>
<cz.romario.opensudoku.gui.inputmethod.IMSingleNumber: Z getHighlightCompletedValues()>
<cz.romario.opensudoku.gui.inputmethod.IMSingleNumber: I getNameResID()>
<cz.romario.opensudoku.gui.inputmethod.IMSingleNumber: Z getShowNumberTotals()>
<cz.romario.opensudoku.gui.inputmethod.IMSingleNumber: V initialize(Landroid/content/Context;Lcz/romario/opensudoku/gui/inputmethod/IMControlPanel;Lcz/romario/opensudoku/game/SudokuGame;Lcz/romario/opensudoku/gui/SudokuBoardView;Lcz/romario/opensudoku/gui/HintsQueue;)>
<cz.romario.opensudoku.gui.inputmethod.IMSingleNumber: V onActivated()>
<cz.romario.opensudoku.gui.inputmethod.IMSingleNumber: V onCellTapped(Lcz/romario/opensudoku/game/Cell;)>
<cz.romario.opensudoku.gui.inputmethod.IMSingleNumber: V onRestoreState(Lcz/romario/opensudoku/gui/inputmethod/IMControlPanelStatePersister$StateBundle;)>
<cz.romario.opensudoku.gui.inputmethod.IMSingleNumber: V onSaveState(Lcz/romario/opensudoku/gui/inputmethod/IMControlPanelStatePersister$StateBundle;)>
<cz.romario.opensudoku.gui.inputmethod.IMSingleNumber: V setHighlightCompletedValues(Z)>
<cz.romario.opensudoku.gui.inputmethod.IMSingleNumber: V setShowNumberTotals(Z)>
<cz.romario.opensudoku.game.command.ClearAllNotesCommand: V <init>()>
<cz.romario.opensudoku.game.command.ClearAllNotesCommand: V execute()>
<cz.romario.opensudoku.game.command.ClearAllNotesCommand: V restoreState(Landroid/os/Bundle;)>
<cz.romario.opensudoku.game.command.ClearAllNotesCommand: V saveState(Landroid/os/Bundle;)>
<cz.romario.opensudoku.game.command.ClearAllNotesCommand: V undo()>
<cz.romario.opensudoku.game.command.EditCellNoteCommand: V <init>()>
<cz.romario.opensudoku.game.command.EditCellNoteCommand: V <init>(Lcz/romario/opensudoku/game/Cell;Lcz/romario/opensudoku/game/CellNote;)>
<cz.romario.opensudoku.game.command.EditCellNoteCommand: V execute()>
<cz.romario.opensudoku.game.command.EditCellNoteCommand: V restoreState(Landroid/os/Bundle;)>
<cz.romario.opensudoku.game.command.EditCellNoteCommand: V saveState(Landroid/os/Bundle;)>
<cz.romario.opensudoku.game.command.EditCellNoteCommand: V undo()>
<cz.romario.opensudoku.game.command.FillInNotesCommand: V <init>()>
<cz.romario.opensudoku.game.command.FillInNotesCommand: V execute()>
<cz.romario.opensudoku.game.command.FillInNotesCommand: V restoreState(Landroid/os/Bundle;)>
<cz.romario.opensudoku.game.command.FillInNotesCommand: V saveState(Landroid/os/Bundle;)>
<cz.romario.opensudoku.game.command.FillInNotesCommand: V undo()>
<cz.romario.opensudoku.game.command.SetCellValueCommand: V <init>()>
<cz.romario.opensudoku.game.command.SetCellValueCommand: V <init>(Lcz/romario/opensudoku/game/Cell;I)>
<cz.romario.opensudoku.game.command.SetCellValueCommand: V execute()>
<cz.romario.opensudoku.game.command.SetCellValueCommand: V restoreState(Landroid/os/Bundle;)>
<cz.romario.opensudoku.game.command.SetCellValueCommand: V saveState(Landroid/os/Bundle;)>
<cz.romario.opensudoku.game.command.SetCellValueCommand: V undo()>
